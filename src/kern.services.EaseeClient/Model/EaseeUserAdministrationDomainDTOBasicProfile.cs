/*
 * Easee Cloud API
 *
 * Find more information and documentation at <br/> <a href='https://developer.easee.cloud'>https://developer.easee.cloud</a>
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = kern.services.EaseeClient.Client.OpenAPIDateConverter;

namespace kern.services.EaseeClient.Model
{
    /// <summary>
    /// EaseeUserAdministrationDomainDTOBasicProfile
    /// </summary>
    [DataContract(Name = "Easee.UserAdministration.Domain.DTO.BasicProfile")]
    public partial class EaseeUserAdministrationDomainDTOBasicProfile : IEquatable<EaseeUserAdministrationDomainDTOBasicProfile>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EaseeUserAdministrationDomainDTOBasicProfile" /> class.
        /// </summary>
        /// <param name="userId">userId.</param>
        /// <param name="eMail">eMail.</param>
        /// <param name="phoneNo">phoneNo.</param>
        /// <param name="fullName">fullName.</param>
        public EaseeUserAdministrationDomainDTOBasicProfile(int userId = default(int), string eMail = default(string), string phoneNo = default(string), string fullName = default(string))
        {
            this.UserId = userId;
            this.EMail = eMail;
            this.PhoneNo = phoneNo;
            this.FullName = fullName;
        }

        /// <summary>
        /// Gets or Sets UserId
        /// </summary>
        [DataMember(Name = "userId", EmitDefaultValue = false)]
        public int UserId { get; set; }

        /// <summary>
        /// Gets or Sets EMail
        /// </summary>
        [DataMember(Name = "eMail", EmitDefaultValue = true)]
        public string EMail { get; set; }

        /// <summary>
        /// Gets or Sets PhoneNo
        /// </summary>
        [DataMember(Name = "phoneNo", EmitDefaultValue = true)]
        public string PhoneNo { get; set; }

        /// <summary>
        /// Gets or Sets FullName
        /// </summary>
        [DataMember(Name = "fullName", EmitDefaultValue = true)]
        public string FullName { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class EaseeUserAdministrationDomainDTOBasicProfile {\n");
            sb.Append("  UserId: ").Append(UserId).Append("\n");
            sb.Append("  EMail: ").Append(EMail).Append("\n");
            sb.Append("  PhoneNo: ").Append(PhoneNo).Append("\n");
            sb.Append("  FullName: ").Append(FullName).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as EaseeUserAdministrationDomainDTOBasicProfile);
        }

        /// <summary>
        /// Returns true if EaseeUserAdministrationDomainDTOBasicProfile instances are equal
        /// </summary>
        /// <param name="input">Instance of EaseeUserAdministrationDomainDTOBasicProfile to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(EaseeUserAdministrationDomainDTOBasicProfile input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.UserId == input.UserId ||
                    this.UserId.Equals(input.UserId)
                ) && 
                (
                    this.EMail == input.EMail ||
                    (this.EMail != null &&
                    this.EMail.Equals(input.EMail))
                ) && 
                (
                    this.PhoneNo == input.PhoneNo ||
                    (this.PhoneNo != null &&
                    this.PhoneNo.Equals(input.PhoneNo))
                ) && 
                (
                    this.FullName == input.FullName ||
                    (this.FullName != null &&
                    this.FullName.Equals(input.FullName))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = (hashCode * 59) + this.UserId.GetHashCode();
                if (this.EMail != null)
                {
                    hashCode = (hashCode * 59) + this.EMail.GetHashCode();
                }
                if (this.PhoneNo != null)
                {
                    hashCode = (hashCode * 59) + this.PhoneNo.GetHashCode();
                }
                if (this.FullName != null)
                {
                    hashCode = (hashCode * 59) + this.FullName.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
