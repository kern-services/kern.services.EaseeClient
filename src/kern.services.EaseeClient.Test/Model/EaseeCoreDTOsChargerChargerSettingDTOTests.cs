/*
 * Easee Cloud API
 *
 * Find more information and documentation at <br/> <a href='https://developer.easee.cloud'>https://developer.easee.cloud</a>
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using kern.services.EaseeClient.Api;
using kern.services.EaseeClient.Model;
using kern.services.EaseeClient.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace kern.services.EaseeClient.Test.Model
{
    /// <summary>
    ///  Class for testing EaseeCoreDTOsChargerChargerSettingDTO
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class EaseeCoreDTOsChargerChargerSettingDTOTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for EaseeCoreDTOsChargerChargerSettingDTO
        //private EaseeCoreDTOsChargerChargerSettingDTO instance;

        public EaseeCoreDTOsChargerChargerSettingDTOTests()
        {
            // TODO uncomment below to create an instance of EaseeCoreDTOsChargerChargerSettingDTO
            //instance = new EaseeCoreDTOsChargerChargerSettingDTO();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of EaseeCoreDTOsChargerChargerSettingDTO
        /// </summary>
        [Fact]
        public void EaseeCoreDTOsChargerChargerSettingDTOInstanceTest()
        {
            // TODO uncomment below to test "IsType" EaseeCoreDTOsChargerChargerSettingDTO
            //Assert.IsType<EaseeCoreDTOsChargerChargerSettingDTO>(instance);
        }


        /// <summary>
        /// Test the property 'Enabled'
        /// </summary>
        [Fact]
        public void EnabledTest()
        {
            // TODO unit test for the property 'Enabled'
        }
        /// <summary>
        /// Test the property 'EnableIdleCurrent'
        /// </summary>
        [Fact]
        public void EnableIdleCurrentTest()
        {
            // TODO unit test for the property 'EnableIdleCurrent'
        }
        /// <summary>
        /// Test the property 'LimitToSinglePhaseCharging'
        /// </summary>
        [Fact]
        public void LimitToSinglePhaseChargingTest()
        {
            // TODO unit test for the property 'LimitToSinglePhaseCharging'
        }
        /// <summary>
        /// Test the property 'LockCablePermanently'
        /// </summary>
        [Fact]
        public void LockCablePermanentlyTest()
        {
            // TODO unit test for the property 'LockCablePermanently'
        }
        /// <summary>
        /// Test the property 'SmartButtonEnabled'
        /// </summary>
        [Fact]
        public void SmartButtonEnabledTest()
        {
            // TODO unit test for the property 'SmartButtonEnabled'
        }
        /// <summary>
        /// Test the property 'PhaseMode'
        /// </summary>
        [Fact]
        public void PhaseModeTest()
        {
            // TODO unit test for the property 'PhaseMode'
        }
        /// <summary>
        /// Test the property 'SmartCharging'
        /// </summary>
        [Fact]
        public void SmartChargingTest()
        {
            // TODO unit test for the property 'SmartCharging'
        }
        /// <summary>
        /// Test the property 'LocalPreAuthorizeEnabled'
        /// </summary>
        [Fact]
        public void LocalPreAuthorizeEnabledTest()
        {
            // TODO unit test for the property 'LocalPreAuthorizeEnabled'
        }
        /// <summary>
        /// Test the property 'LocalAuthorizeOfflineEnabled'
        /// </summary>
        [Fact]
        public void LocalAuthorizeOfflineEnabledTest()
        {
            // TODO unit test for the property 'LocalAuthorizeOfflineEnabled'
        }
        /// <summary>
        /// Test the property 'AllowOfflineTxForUnknownId'
        /// </summary>
        [Fact]
        public void AllowOfflineTxForUnknownIdTest()
        {
            // TODO unit test for the property 'AllowOfflineTxForUnknownId'
        }
        /// <summary>
        /// Test the property 'OfflineChargingMode'
        /// </summary>
        [Fact]
        public void OfflineChargingModeTest()
        {
            // TODO unit test for the property 'OfflineChargingMode'
        }
        /// <summary>
        /// Test the property 'AuthorizationRequired'
        /// </summary>
        [Fact]
        public void AuthorizationRequiredTest()
        {
            // TODO unit test for the property 'AuthorizationRequired'
        }
        /// <summary>
        /// Test the property 'RemoteStartRequired'
        /// </summary>
        [Fact]
        public void RemoteStartRequiredTest()
        {
            // TODO unit test for the property 'RemoteStartRequired'
        }
        /// <summary>
        /// Test the property 'LedStripBrightness'
        /// </summary>
        [Fact]
        public void LedStripBrightnessTest()
        {
            // TODO unit test for the property 'LedStripBrightness'
        }
        /// <summary>
        /// Test the property 'MaxChargerCurrent'
        /// </summary>
        [Fact]
        public void MaxChargerCurrentTest()
        {
            // TODO unit test for the property 'MaxChargerCurrent'
        }
        /// <summary>
        /// Test the property 'DynamicChargerCurrent'
        /// </summary>
        [Fact]
        public void DynamicChargerCurrentTest()
        {
            // TODO unit test for the property 'DynamicChargerCurrent'
        }

    }

}
