/*
 * Easee Cloud API
 *
 * Find more information and documentation at <br/> <a href='https://developer.easee.cloud'>https://developer.easee.cloud</a>
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using kern.services.EaseeClient.Api;
using kern.services.EaseeClient.Model;
using kern.services.EaseeClient.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace kern.services.EaseeClient.Test.Model
{
    /// <summary>
    ///  Class for testing EaseeCoreDTOsEqualizerEqualizerStateDTO
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class EaseeCoreDTOsEqualizerEqualizerStateDTOTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for EaseeCoreDTOsEqualizerEqualizerStateDTO
        //private EaseeCoreDTOsEqualizerEqualizerStateDTO instance;

        public EaseeCoreDTOsEqualizerEqualizerStateDTOTests()
        {
            // TODO uncomment below to create an instance of EaseeCoreDTOsEqualizerEqualizerStateDTO
            //instance = new EaseeCoreDTOsEqualizerEqualizerStateDTO();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of EaseeCoreDTOsEqualizerEqualizerStateDTO
        /// </summary>
        [Fact]
        public void EaseeCoreDTOsEqualizerEqualizerStateDTOInstanceTest()
        {
            // TODO uncomment below to test "IsType" EaseeCoreDTOsEqualizerEqualizerStateDTO
            //Assert.IsType<EaseeCoreDTOsEqualizerEqualizerStateDTO>(instance);
        }


        /// <summary>
        /// Test the property 'CurrentL1'
        /// </summary>
        [Fact]
        public void CurrentL1Test()
        {
            // TODO unit test for the property 'CurrentL1'
        }
        /// <summary>
        /// Test the property 'CurrentL2'
        /// </summary>
        [Fact]
        public void CurrentL2Test()
        {
            // TODO unit test for the property 'CurrentL2'
        }
        /// <summary>
        /// Test the property 'CurrentL3'
        /// </summary>
        [Fact]
        public void CurrentL3Test()
        {
            // TODO unit test for the property 'CurrentL3'
        }
        /// <summary>
        /// Test the property 'VoltageNL1'
        /// </summary>
        [Fact]
        public void VoltageNL1Test()
        {
            // TODO unit test for the property 'VoltageNL1'
        }
        /// <summary>
        /// Test the property 'VoltageNL2'
        /// </summary>
        [Fact]
        public void VoltageNL2Test()
        {
            // TODO unit test for the property 'VoltageNL2'
        }
        /// <summary>
        /// Test the property 'VoltageNL3'
        /// </summary>
        [Fact]
        public void VoltageNL3Test()
        {
            // TODO unit test for the property 'VoltageNL3'
        }
        /// <summary>
        /// Test the property 'VoltageL1L2'
        /// </summary>
        [Fact]
        public void VoltageL1L2Test()
        {
            // TODO unit test for the property 'VoltageL1L2'
        }
        /// <summary>
        /// Test the property 'VoltageL1L3'
        /// </summary>
        [Fact]
        public void VoltageL1L3Test()
        {
            // TODO unit test for the property 'VoltageL1L3'
        }
        /// <summary>
        /// Test the property 'VoltageL2L3'
        /// </summary>
        [Fact]
        public void VoltageL2L3Test()
        {
            // TODO unit test for the property 'VoltageL2L3'
        }
        /// <summary>
        /// Test the property 'ActivePowerImport'
        /// </summary>
        [Fact]
        public void ActivePowerImportTest()
        {
            // TODO unit test for the property 'ActivePowerImport'
        }
        /// <summary>
        /// Test the property 'ActivePowerExport'
        /// </summary>
        [Fact]
        public void ActivePowerExportTest()
        {
            // TODO unit test for the property 'ActivePowerExport'
        }
        /// <summary>
        /// Test the property 'ReactivePowerImport'
        /// </summary>
        [Fact]
        public void ReactivePowerImportTest()
        {
            // TODO unit test for the property 'ReactivePowerImport'
        }
        /// <summary>
        /// Test the property 'ReactivePowerExport'
        /// </summary>
        [Fact]
        public void ReactivePowerExportTest()
        {
            // TODO unit test for the property 'ReactivePowerExport'
        }
        /// <summary>
        /// Test the property 'CumulativeActivePowerImport'
        /// </summary>
        [Fact]
        public void CumulativeActivePowerImportTest()
        {
            // TODO unit test for the property 'CumulativeActivePowerImport'
        }
        /// <summary>
        /// Test the property 'CumulativeActivePowerExport'
        /// </summary>
        [Fact]
        public void CumulativeActivePowerExportTest()
        {
            // TODO unit test for the property 'CumulativeActivePowerExport'
        }
        /// <summary>
        /// Test the property 'CumulativeReactivePowerImport'
        /// </summary>
        [Fact]
        public void CumulativeReactivePowerImportTest()
        {
            // TODO unit test for the property 'CumulativeReactivePowerImport'
        }
        /// <summary>
        /// Test the property 'CumulativeReactivePowerExport'
        /// </summary>
        [Fact]
        public void CumulativeReactivePowerExportTest()
        {
            // TODO unit test for the property 'CumulativeReactivePowerExport'
        }
        /// <summary>
        /// Test the property 'ClockAndDateMeter'
        /// </summary>
        [Fact]
        public void ClockAndDateMeterTest()
        {
            // TODO unit test for the property 'ClockAndDateMeter'
        }
        /// <summary>
        /// Test the property 'Rcpi'
        /// </summary>
        [Fact]
        public void RcpiTest()
        {
            // TODO unit test for the property 'Rcpi'
        }
        /// <summary>
        /// Test the property 'MaxPowerImport'
        /// </summary>
        [Fact]
        public void MaxPowerImportTest()
        {
            // TODO unit test for the property 'MaxPowerImport'
        }
        /// <summary>
        /// Test the property 'LocalRSSI'
        /// </summary>
        [Fact]
        public void LocalRSSITest()
        {
            // TODO unit test for the property 'LocalRSSI'
        }
        /// <summary>
        /// Test the property 'SoftwareRelease'
        /// </summary>
        [Fact]
        public void SoftwareReleaseTest()
        {
            // TODO unit test for the property 'SoftwareRelease'
        }
        /// <summary>
        /// Test the property 'LatestFirmware'
        /// </summary>
        [Fact]
        public void LatestFirmwareTest()
        {
            // TODO unit test for the property 'LatestFirmware'
        }
        /// <summary>
        /// Test the property 'IsOnline'
        /// </summary>
        [Fact]
        public void IsOnlineTest()
        {
            // TODO unit test for the property 'IsOnline'
        }
        /// <summary>
        /// Test the property 'LatestPulse'
        /// </summary>
        [Fact]
        public void LatestPulseTest()
        {
            // TODO unit test for the property 'LatestPulse'
        }
        /// <summary>
        /// Test the property 'LedMode'
        /// </summary>
        [Fact]
        public void LedModeTest()
        {
            // TODO unit test for the property 'LedMode'
        }
        /// <summary>
        /// Test the property 'EqualizedChargeCurrentL1'
        /// </summary>
        [Fact]
        public void EqualizedChargeCurrentL1Test()
        {
            // TODO unit test for the property 'EqualizedChargeCurrentL1'
        }
        /// <summary>
        /// Test the property 'EqualizedChargeCurrentL2'
        /// </summary>
        [Fact]
        public void EqualizedChargeCurrentL2Test()
        {
            // TODO unit test for the property 'EqualizedChargeCurrentL2'
        }
        /// <summary>
        /// Test the property 'EqualizedChargeCurrentL3'
        /// </summary>
        [Fact]
        public void EqualizedChargeCurrentL3Test()
        {
            // TODO unit test for the property 'EqualizedChargeCurrentL3'
        }
        /// <summary>
        /// Test the property 'ConnectedToCloud'
        /// </summary>
        [Fact]
        public void ConnectedToCloudTest()
        {
            // TODO unit test for the property 'ConnectedToCloud'
        }

    }

}
