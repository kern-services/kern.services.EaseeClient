/*
 * Easee Cloud API
 *
 * Find more information and documentation at <br/> <a href='https://developer.easee.cloud'>https://developer.easee.cloud</a>
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using kern.services.EaseeClient.Api;
using kern.services.EaseeClient.Model;
using kern.services.EaseeClient.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace kern.services.EaseeClient.Test.Model
{
    /// <summary>
    ///  Class for testing EaseeCoreDTOsChargerChargerConfigurationDTO
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class EaseeCoreDTOsChargerChargerConfigurationDTOTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for EaseeCoreDTOsChargerChargerConfigurationDTO
        //private EaseeCoreDTOsChargerChargerConfigurationDTO instance;

        public EaseeCoreDTOsChargerChargerConfigurationDTOTests()
        {
            // TODO uncomment below to create an instance of EaseeCoreDTOsChargerChargerConfigurationDTO
            //instance = new EaseeCoreDTOsChargerChargerConfigurationDTO();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of EaseeCoreDTOsChargerChargerConfigurationDTO
        /// </summary>
        [Fact]
        public void EaseeCoreDTOsChargerChargerConfigurationDTOInstanceTest()
        {
            // TODO uncomment below to test "IsType" EaseeCoreDTOsChargerChargerConfigurationDTO
            //Assert.IsType<EaseeCoreDTOsChargerChargerConfigurationDTO>(instance);
        }


        /// <summary>
        /// Test the property 'IsEnabled'
        /// </summary>
        [Fact]
        public void IsEnabledTest()
        {
            // TODO unit test for the property 'IsEnabled'
        }
        /// <summary>
        /// Test the property 'LockCablePermanently'
        /// </summary>
        [Fact]
        public void LockCablePermanentlyTest()
        {
            // TODO unit test for the property 'LockCablePermanently'
        }
        /// <summary>
        /// Test the property 'AuthorizationRequired'
        /// </summary>
        [Fact]
        public void AuthorizationRequiredTest()
        {
            // TODO unit test for the property 'AuthorizationRequired'
        }
        /// <summary>
        /// Test the property 'RemoteStartRequired'
        /// </summary>
        [Fact]
        public void RemoteStartRequiredTest()
        {
            // TODO unit test for the property 'RemoteStartRequired'
        }
        /// <summary>
        /// Test the property 'SmartButtonEnabled'
        /// </summary>
        [Fact]
        public void SmartButtonEnabledTest()
        {
            // TODO unit test for the property 'SmartButtonEnabled'
        }
        /// <summary>
        /// Test the property 'WiFiSSID'
        /// </summary>
        [Fact]
        public void WiFiSSIDTest()
        {
            // TODO unit test for the property 'WiFiSSID'
        }
        /// <summary>
        /// Test the property 'DetectedPowerGridType'
        /// </summary>
        [Fact]
        public void DetectedPowerGridTypeTest()
        {
            // TODO unit test for the property 'DetectedPowerGridType'
        }
        /// <summary>
        /// Test the property 'OfflineChargingMode'
        /// </summary>
        [Fact]
        public void OfflineChargingModeTest()
        {
            // TODO unit test for the property 'OfflineChargingMode'
        }
        /// <summary>
        /// Test the property 'CircuitMaxCurrentP1'
        /// </summary>
        [Fact]
        public void CircuitMaxCurrentP1Test()
        {
            // TODO unit test for the property 'CircuitMaxCurrentP1'
        }
        /// <summary>
        /// Test the property 'CircuitMaxCurrentP2'
        /// </summary>
        [Fact]
        public void CircuitMaxCurrentP2Test()
        {
            // TODO unit test for the property 'CircuitMaxCurrentP2'
        }
        /// <summary>
        /// Test the property 'CircuitMaxCurrentP3'
        /// </summary>
        [Fact]
        public void CircuitMaxCurrentP3Test()
        {
            // TODO unit test for the property 'CircuitMaxCurrentP3'
        }
        /// <summary>
        /// Test the property 'EnableIdleCurrent'
        /// </summary>
        [Fact]
        public void EnableIdleCurrentTest()
        {
            // TODO unit test for the property 'EnableIdleCurrent'
        }
        /// <summary>
        /// Test the property 'LimitToSinglePhaseCharging'
        /// </summary>
        [Fact]
        public void LimitToSinglePhaseChargingTest()
        {
            // TODO unit test for the property 'LimitToSinglePhaseCharging'
        }
        /// <summary>
        /// Test the property 'PhaseMode'
        /// </summary>
        [Fact]
        public void PhaseModeTest()
        {
            // TODO unit test for the property 'PhaseMode'
        }
        /// <summary>
        /// Test the property 'LocalNodeType'
        /// </summary>
        [Fact]
        public void LocalNodeTypeTest()
        {
            // TODO unit test for the property 'LocalNodeType'
        }
        /// <summary>
        /// Test the property 'LocalAuthorizationRequired'
        /// </summary>
        [Fact]
        public void LocalAuthorizationRequiredTest()
        {
            // TODO unit test for the property 'LocalAuthorizationRequired'
        }
        /// <summary>
        /// Test the property 'LocalRadioChannel'
        /// </summary>
        [Fact]
        public void LocalRadioChannelTest()
        {
            // TODO unit test for the property 'LocalRadioChannel'
        }
        /// <summary>
        /// Test the property 'LocalShortAddress'
        /// </summary>
        [Fact]
        public void LocalShortAddressTest()
        {
            // TODO unit test for the property 'LocalShortAddress'
        }
        /// <summary>
        /// Test the property 'LocalParentAddrOrNumOfNodes'
        /// </summary>
        [Fact]
        public void LocalParentAddrOrNumOfNodesTest()
        {
            // TODO unit test for the property 'LocalParentAddrOrNumOfNodes'
        }
        /// <summary>
        /// Test the property 'LocalPreAuthorizeEnabled'
        /// </summary>
        [Fact]
        public void LocalPreAuthorizeEnabledTest()
        {
            // TODO unit test for the property 'LocalPreAuthorizeEnabled'
        }
        /// <summary>
        /// Test the property 'LocalAuthorizeOfflineEnabled'
        /// </summary>
        [Fact]
        public void LocalAuthorizeOfflineEnabledTest()
        {
            // TODO unit test for the property 'LocalAuthorizeOfflineEnabled'
        }
        /// <summary>
        /// Test the property 'AllowOfflineTxForUnknownId'
        /// </summary>
        [Fact]
        public void AllowOfflineTxForUnknownIdTest()
        {
            // TODO unit test for the property 'AllowOfflineTxForUnknownId'
        }
        /// <summary>
        /// Test the property 'MaxChargerCurrent'
        /// </summary>
        [Fact]
        public void MaxChargerCurrentTest()
        {
            // TODO unit test for the property 'MaxChargerCurrent'
        }
        /// <summary>
        /// Test the property 'LedStripBrightness'
        /// </summary>
        [Fact]
        public void LedStripBrightnessTest()
        {
            // TODO unit test for the property 'LedStripBrightness'
        }
        /// <summary>
        /// Test the property 'ChargingSchedule'
        /// </summary>
        [Fact]
        public void ChargingScheduleTest()
        {
            // TODO unit test for the property 'ChargingSchedule'
        }

    }

}
