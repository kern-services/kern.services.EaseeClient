/*
 * Easee Cloud API
 *
 * Find more information and documentation at <br/> <a href='https://developer.easee.cloud'>https://developer.easee.cloud</a>
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using kern.services.EaseeClient.Client;
using kern.services.EaseeClient.Api;
// uncomment below to import models
//using kern.services.EaseeClient.Model;

namespace kern.services.EaseeClient.Test.Api
{
    /// <summary>
    ///  Class for testing SiteApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class SiteApiTests : IDisposable
    {
        private SiteApi instance;

        public SiteApiTests()
        {
            instance = new SiteApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of SiteApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' SiteApi
            //Assert.IsType<SiteApi>(instance);
        }

        /// <summary>
        /// Test ApiSitesAcceptPost
        /// </summary>
        [Fact]
        public void ApiSitesAcceptPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? email = null;
            //string? body = null;
            //instance.ApiSitesAcceptPost(email, body);
        }

        /// <summary>
        /// Test ApiSitesCircuitsConfirmPost
        /// </summary>
        [Fact]
        public void ApiSitesCircuitsConfirmPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? body = null;
            //instance.ApiSitesCircuitsConfirmPost(body);
        }

        /// <summary>
        /// Test ApiSitesGet
        /// </summary>
        [Fact]
        public void ApiSitesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? search = null;
            //int? offset = null;
            //int? limit = null;
            //var response = instance.ApiSitesGet(search, offset, limit);
            //Assert.IsType<List<EaseeCoreDTOsSiteBasicSiteDTO>>(response);
        }

        /// <summary>
        /// Test ApiSitesSiteIdAccessPut
        /// </summary>
        [Fact]
        public void ApiSitesSiteIdAccessPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int siteId = null;
            //int? body = null;
            //instance.ApiSitesSiteIdAccessPut(siteId, body);
        }

        /// <summary>
        /// Test ApiSitesSiteIdBreakdownFromToGet
        /// </summary>
        [Fact]
        public void ApiSitesSiteIdBreakdownFromToGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int siteId = null;
            //DateTime from = null;
            //DateTime to = null;
            //var response = instance.ApiSitesSiteIdBreakdownFromToGet(siteId, from, to);
            //Assert.IsType<List<EaseeCoreDTOsSessionChargingSessionDetailDTO>>(response);
        }

        /// <summary>
        /// Test ApiSitesSiteIdChargersChargerIdUsersUserIdMonthlyGet
        /// </summary>
        [Fact]
        public void ApiSitesSiteIdChargersChargerIdUsersUserIdMonthlyGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int siteId = null;
            //string chargerId = null;
            //int userId = null;
            //var response = instance.ApiSitesSiteIdChargersChargerIdUsersUserIdMonthlyGet(siteId, chargerId, userId);
            //Assert.IsType<List<EaseeCoreDTOsSessionMonthlySessionSummaryDTO>>(response);
        }

        /// <summary>
        /// Test ApiSitesSiteIdChargersChargerIdUsersUserIdYearlyGet
        /// </summary>
        [Fact]
        public void ApiSitesSiteIdChargersChargerIdUsersUserIdYearlyGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int siteId = null;
            //string chargerId = null;
            //int userId = null;
            //var response = instance.ApiSitesSiteIdChargersChargerIdUsersUserIdYearlyGet(siteId, chargerId, userId);
            //Assert.IsType<List<EaseeCoreDTOsSessionYearlySessionSummaryDTO>>(response);
        }

        /// <summary>
        /// Test ApiSitesSiteIdChargersGet
        /// </summary>
        [Fact]
        public void ApiSitesSiteIdChargersGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int siteId = null;
            //var response = instance.ApiSitesSiteIdChargersGet(siteId);
            //Assert.IsType<List<EaseeSiteStructureDomainPortsChargerDTO>>(response);
        }

        /// <summary>
        /// Test ApiSitesSiteIdChargersLevelOfAccessPut
        /// </summary>
        [Fact]
        public void ApiSitesSiteIdChargersLevelOfAccessPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int siteId = null;
            //List<EaseeCoreDTOsSiteChargerAccessDTO>? easeeCoreDTOsSiteChargerAccessDTO = null;
            //instance.ApiSitesSiteIdChargersLevelOfAccessPut(siteId, easeeCoreDTOsSiteChargerAccessDTO);
        }

        /// <summary>
        /// Test ApiSitesSiteIdCircuitCollectionPost
        /// </summary>
        [Fact]
        public void ApiSitesSiteIdCircuitCollectionPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int siteId = null;
            //List<EaseeCoreDTOsSiteUpdateCircuitDTO>? easeeCoreDTOsSiteUpdateCircuitDTO = null;
            //instance.ApiSitesSiteIdCircuitCollectionPost(siteId, easeeCoreDTOsSiteUpdateCircuitDTO);
        }

        /// <summary>
        /// Test ApiSitesSiteIdCircuitsCircuitIdChargersPut
        /// </summary>
        [Fact]
        public void ApiSitesSiteIdCircuitsCircuitIdChargersPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int siteId = null;
            //int circuitId = null;
            //List<EaseeCoreDTOsChargerChargerDTO>? easeeCoreDTOsChargerChargerDTO = null;
            //instance.ApiSitesSiteIdCircuitsCircuitIdChargersPut(siteId, circuitId, easeeCoreDTOsChargerChargerDTO);
        }

        /// <summary>
        /// Test ApiSitesSiteIdCircuitsCircuitIdDelete
        /// </summary>
        [Fact]
        public void ApiSitesSiteIdCircuitsCircuitIdDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int siteId = null;
            //int circuitId = null;
            //instance.ApiSitesSiteIdCircuitsCircuitIdDelete(siteId, circuitId);
        }

        /// <summary>
        /// Test ApiSitesSiteIdCircuitsCircuitIdDynamicCurrentGet
        /// </summary>
        [Fact]
        public void ApiSitesSiteIdCircuitsCircuitIdDynamicCurrentGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int siteId = null;
            //int circuitId = null;
            //var response = instance.ApiSitesSiteIdCircuitsCircuitIdDynamicCurrentGet(siteId, circuitId);
            //Assert.IsType<EaseeCoreDTOsSiteDynamicCircuitCurrentDto>(response);
        }

        /// <summary>
        /// Test ApiSitesSiteIdCircuitsCircuitIdDynamicCurrentPost
        /// </summary>
        [Fact]
        public void ApiSitesSiteIdCircuitsCircuitIdDynamicCurrentPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int siteId = null;
            //int circuitId = null;
            //EaseeCoreDTOsSiteDynamicCircuitCurrentTtlDto? easeeCoreDTOsSiteDynamicCircuitCurrentTtlDto = null;
            //instance.ApiSitesSiteIdCircuitsCircuitIdDynamicCurrentPost(siteId, circuitId, easeeCoreDTOsSiteDynamicCircuitCurrentTtlDto);
        }

        /// <summary>
        /// Test ApiSitesSiteIdCircuitsCircuitIdSettingsGet
        /// </summary>
        [Fact]
        public void ApiSitesSiteIdCircuitsCircuitIdSettingsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int siteId = null;
            //int circuitId = null;
            //var response = instance.ApiSitesSiteIdCircuitsCircuitIdSettingsGet(siteId, circuitId);
            //Assert.IsType<EaseeCoreDTOsSiteExtendedCircuitSettingsDTO>(response);
        }

        /// <summary>
        /// Test ApiSitesSiteIdCircuitsCircuitIdSettingsPost
        /// </summary>
        [Fact]
        public void ApiSitesSiteIdCircuitsCircuitIdSettingsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int siteId = null;
            //int circuitId = null;
            //EaseeCoreDTOsSiteCircuitSettingsDTO? easeeCoreDTOsSiteCircuitSettingsDTO = null;
            //instance.ApiSitesSiteIdCircuitsCircuitIdSettingsPost(siteId, circuitId, easeeCoreDTOsSiteCircuitSettingsDTO);
        }

        /// <summary>
        /// Test ApiSitesSiteIdCircuitsPost
        /// </summary>
        [Fact]
        public void ApiSitesSiteIdCircuitsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int siteId = null;
            //EaseeCoreDTOsSiteUpdateCircuitDTO? easeeCoreDTOsSiteUpdateCircuitDTO = null;
            //instance.ApiSitesSiteIdCircuitsPost(siteId, easeeCoreDTOsSiteUpdateCircuitDTO);
        }

        /// <summary>
        /// Test ApiSitesSiteIdCircuitsPut
        /// </summary>
        [Fact]
        public void ApiSitesSiteIdCircuitsPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int siteId = null;
            //List<EaseeCoreDTOsSiteCircuitDTO>? easeeCoreDTOsSiteCircuitDTO = null;
            //instance.ApiSitesSiteIdCircuitsPut(siteId, easeeCoreDTOsSiteCircuitDTO);
        }

        /// <summary>
        /// Test ApiSitesSiteIdCircuitsSerialNumberPinCodeCircuitNamePut
        /// </summary>
        [Fact]
        public void ApiSitesSiteIdCircuitsSerialNumberPinCodeCircuitNamePutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int siteId = null;
            //string serialNumber = null;
            //string pinCode = null;
            //string circuitName = null;
            //instance.ApiSitesSiteIdCircuitsSerialNumberPinCodeCircuitNamePut(siteId, serialNumber, pinCode, circuitName);
        }

        /// <summary>
        /// Test ApiSitesSiteIdCircuitsSerialNumberPinCodeGet
        /// </summary>
        [Fact]
        public void ApiSitesSiteIdCircuitsSerialNumberPinCodeGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int siteId = null;
            //string serialNumber = null;
            //string pinCode = null;
            //var response = instance.ApiSitesSiteIdCircuitsSerialNumberPinCodeGet(siteId, serialNumber, pinCode);
            //Assert.IsType<EaseeSiteStructureDomainPortsSiteCircuitDTO>(response);
        }

        /// <summary>
        /// Test ApiSitesSiteIdDelete
        /// </summary>
        [Fact]
        public void ApiSitesSiteIdDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int siteId = null;
            //instance.ApiSitesSiteIdDelete(siteId);
        }

        /// <summary>
        /// Test ApiSitesSiteIdEnergyGet
        /// </summary>
        [Fact]
        public void ApiSitesSiteIdEnergyGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int siteId = null;
            //var response = instance.ApiSitesSiteIdEnergyGet(siteId);
            //Assert.IsType<List<EaseeCoreDTOsChargerChargerEnergyDTO>>(response);
        }

        /// <summary>
        /// Test ApiSitesSiteIdEqualizersEqualizerIdDelete
        /// </summary>
        [Fact]
        public void ApiSitesSiteIdEqualizersEqualizerIdDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int siteId = null;
            //string equalizerId = null;
            //instance.ApiSitesSiteIdEqualizersEqualizerIdDelete(siteId, equalizerId);
        }

        /// <summary>
        /// Test ApiSitesSiteIdInvitePost
        /// </summary>
        [Fact]
        public void ApiSitesSiteIdInvitePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int siteId = null;
            //EaseeAccessControlModelsSitePermissionRequestDTO? easeeAccessControlModelsSitePermissionRequestDTO = null;
            //instance.ApiSitesSiteIdInvitePost(siteId, easeeAccessControlModelsSitePermissionRequestDTO);
        }

        /// <summary>
        /// Test ApiSitesSiteIdLookupAdminGet
        /// </summary>
        [Fact]
        public void ApiSitesSiteIdLookupAdminGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int siteId = null;
            //string? phoneNo = null;
            //var response = instance.ApiSitesSiteIdLookupAdminGet(siteId, phoneNo);
            //Assert.IsType<EaseeUserAdministrationDomainDTOBasicProfile>(response);
        }

        /// <summary>
        /// Test ApiSitesSiteIdLookupUserGet
        /// </summary>
        [Fact]
        public void ApiSitesSiteIdLookupUserGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int siteId = null;
            //string? phoneNo = null;
            //var response = instance.ApiSitesSiteIdLookupUserGet(siteId, phoneNo);
            //Assert.IsType<EaseeUserAdministrationDomainDTOBasicProfile>(response);
        }

        /// <summary>
        /// Test ApiSitesSiteIdMonthlyGet
        /// </summary>
        [Fact]
        public void ApiSitesSiteIdMonthlyGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int siteId = null;
            //var response = instance.ApiSitesSiteIdMonthlyGet(siteId);
            //Assert.IsType<List<EaseeCoreDTOsSessionMonthlySummaryDTO>>(response);
        }

        /// <summary>
        /// Test ApiSitesSiteIdOwnerPost
        /// </summary>
        [Fact]
        public void ApiSitesSiteIdOwnerPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int siteId = null;
            //EaseeAccessControlModelsSiteOwnerDTO? easeeAccessControlModelsSiteOwnerDTO = null;
            //instance.ApiSitesSiteIdOwnerPost(siteId, easeeAccessControlModelsSiteOwnerDTO);
        }

        /// <summary>
        /// Test ApiSitesSiteIdPatch
        /// </summary>
        [Fact]
        public void ApiSitesSiteIdPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int siteId = null;
            //List<MicrosoftAspNetCoreJsonPatchOperationsOperation>? microsoftAspNetCoreJsonPatchOperationsOperation = null;
            //instance.ApiSitesSiteIdPatch(siteId, microsoftAspNetCoreJsonPatchOperationsOperation);
        }

        /// <summary>
        /// Test ApiSitesSiteIdPermissionDelete
        /// </summary>
        [Fact]
        public void ApiSitesSiteIdPermissionDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int siteId = null;
            //string? phoneNo = null;
            //string? email = null;
            //instance.ApiSitesSiteIdPermissionDelete(siteId, phoneNo, email);
        }

        /// <summary>
        /// Test ApiSitesSiteIdPermissionPut
        /// </summary>
        [Fact]
        public void ApiSitesSiteIdPermissionPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int siteId = null;
            //EaseeCoreDTOsSiteUpdateSitePermissionRequestDTO? easeeCoreDTOsSiteUpdateSitePermissionRequestDTO = null;
            //instance.ApiSitesSiteIdPermissionPut(siteId, easeeCoreDTOsSiteUpdateSitePermissionRequestDTO);
        }

        /// <summary>
        /// Test ApiSitesSiteIdPricePost
        /// </summary>
        [Fact]
        public void ApiSitesSiteIdPricePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int siteId = null;
            //EaseeCoreDTOsSiteSiteCostDTO? easeeCoreDTOsSiteSiteCostDTO = null;
            //instance.ApiSitesSiteIdPricePost(siteId, easeeCoreDTOsSiteSiteCostDTO);
        }

        /// <summary>
        /// Test ApiSitesSiteIdReinvitePost
        /// </summary>
        [Fact]
        public void ApiSitesSiteIdReinvitePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int siteId = null;
            //EaseeAccessControlModelsSitePermissionRequestDTO? easeeAccessControlModelsSitePermissionRequestDTO = null;
            //instance.ApiSitesSiteIdReinvitePost(siteId, easeeAccessControlModelsSitePermissionRequestDTO);
        }

        /// <summary>
        /// Test ApiSitesSiteIdRequestAccessPost
        /// </summary>
        [Fact]
        public void ApiSitesSiteIdRequestAccessPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int siteId = null;
            //int? body = null;
            //instance.ApiSitesSiteIdRequestAccessPost(siteId, body);
        }

        /// <summary>
        /// Test ApiSitesSiteIdSiteGroupsGet
        /// </summary>
        [Fact]
        public void ApiSitesSiteIdSiteGroupsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int siteId = null;
            //var response = instance.ApiSitesSiteIdSiteGroupsGet(siteId);
            //Assert.IsType<List<EaseePartnersDomainEntitiesPartnerSiteGroup>>(response);
        }

        /// <summary>
        /// Test ApiSitesSiteIdUsersGet
        /// </summary>
        [Fact]
        public void ApiSitesSiteIdUsersGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int siteId = null;
            //var response = instance.ApiSitesSiteIdUsersGet(siteId);
            //Assert.IsType<EaseeUserAdministrationDomainDTOSitePermissionDTO>(response);
        }

        /// <summary>
        /// Test ApiSitesSiteIdUsersUserIdMonthlyGet
        /// </summary>
        [Fact]
        public void ApiSitesSiteIdUsersUserIdMonthlyGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int siteId = null;
            //int userId = null;
            //var response = instance.ApiSitesSiteIdUsersUserIdMonthlyGet(siteId, userId);
            //Assert.IsType<List<EaseeCoreDTOsSessionMonthlySessionSummaryDTO>>(response);
        }

        /// <summary>
        /// Test ApiSitesSiteIdUsersUserIdYearlyGet
        /// </summary>
        [Fact]
        public void ApiSitesSiteIdUsersUserIdYearlyGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int siteId = null;
            //int userId = null;
            //var response = instance.ApiSitesSiteIdUsersUserIdYearlyGet(siteId, userId);
            //Assert.IsType<List<EaseeCoreDTOsSessionYearlySessionSummaryDTO>>(response);
        }

        /// <summary>
        /// Test ApiSitesSiteIdWeeklyGet
        /// </summary>
        [Fact]
        public void ApiSitesSiteIdWeeklyGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int siteId = null;
            //var response = instance.ApiSitesSiteIdWeeklyGet(siteId);
            //Assert.IsType<List<EaseeCoreDTOsSessionWeeklySummaryDTO>>(response);
        }

        /// <summary>
        /// Test ApiSitesSiteIdYearlyGet
        /// </summary>
        [Fact]
        public void ApiSitesSiteIdYearlyGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int siteId = null;
            //var response = instance.ApiSitesSiteIdYearlyGet(siteId);
            //Assert.IsType<List<EaseeCoreDTOsSessionYearlySummaryDTO>>(response);
        }

        /// <summary>
        /// Test GetSiteById
        /// </summary>
        [Fact]
        public void GetSiteByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int siteId = null;
            //bool? detailed = null;
            //var response = instance.GetSiteById(siteId, detailed);
            //Assert.IsType<EaseeCoreDTOsSiteDetailSiteDTO>(response);
        }

        /// <summary>
        /// Test GetSiteState
        /// </summary>
        [Fact]
        public void GetSiteStateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int siteId = null;
            //var response = instance.GetSiteState(siteId);
            //Assert.IsType<EaseeCoreDTOsDashboardDashboardStateDTO>(response);
        }
    }
}
