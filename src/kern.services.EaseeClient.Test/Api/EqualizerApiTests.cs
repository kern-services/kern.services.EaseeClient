/*
 * Easee Cloud API
 *
 * Find more information and documentation at <br/> <a href='https://developer.easee.cloud'>https://developer.easee.cloud</a>
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using kern.services.EaseeClient.Client;
using kern.services.EaseeClient.Api;
// uncomment below to import models
//using kern.services.EaseeClient.Model;

namespace kern.services.EaseeClient.Test.Api
{
    /// <summary>
    ///  Class for testing EqualizerApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class EqualizerApiTests : IDisposable
    {
        private EqualizerApi instance;

        public EqualizerApiTests()
        {
            instance = new EqualizerApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of EqualizerApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' EqualizerApi
            //Assert.IsType<EqualizerApi>(instance);
        }

        /// <summary>
        /// Test ApiEqualizersIdCommandsConfigureMaxAllocatedCurrentPost
        /// </summary>
        [Fact]
        public void ApiEqualizersIdCommandsConfigureMaxAllocatedCurrentPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //EaseeCoreDTOsEqualizerMaxAllocatedCurrentDTO? easeeCoreDTOsEqualizerMaxAllocatedCurrentDTO = null;
            //instance.ApiEqualizersIdCommandsConfigureMaxAllocatedCurrentPost(id, easeeCoreDTOsEqualizerMaxAllocatedCurrentDTO);
        }

        /// <summary>
        /// Test ApiEqualizersIdCommandsConfigureMeterTypePost
        /// </summary>
        [Fact]
        public void ApiEqualizersIdCommandsConfigureMeterTypePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //EaseeCoreDTOsEqualizerMeterSettingsDTO? easeeCoreDTOsEqualizerMeterSettingsDTO = null;
            //instance.ApiEqualizersIdCommandsConfigureMeterTypePost(id, easeeCoreDTOsEqualizerMeterSettingsDTO);
        }

        /// <summary>
        /// Test ApiEqualizersIdCommandsRebootPost
        /// </summary>
        [Fact]
        public void ApiEqualizersIdCommandsRebootPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.ApiEqualizersIdCommandsRebootPost(id);
        }

        /// <summary>
        /// Test ApiEqualizersIdCommandsUpdateFirmwarePost
        /// </summary>
        [Fact]
        public void ApiEqualizersIdCommandsUpdateFirmwarePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.ApiEqualizersIdCommandsUpdateFirmwarePost(id);
        }

        /// <summary>
        /// Test ApiEqualizersIdConfigGet
        /// </summary>
        [Fact]
        public void ApiEqualizersIdConfigGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.ApiEqualizersIdConfigGet(id);
            //Assert.IsType<EaseeCoreDTOsEqualizerEqualizerConfigurationDTO>(response);
        }

        /// <summary>
        /// Test ApiEqualizersIdDetailsGet
        /// </summary>
        [Fact]
        public void ApiEqualizersIdDetailsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.ApiEqualizersIdDetailsGet(id);
            //Assert.IsType<EaseeCoreDTOsEqualizerDetailedEqualizerDTO>(response);
        }

        /// <summary>
        /// Test ApiEqualizersIdGet
        /// </summary>
        [Fact]
        public void ApiEqualizersIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.ApiEqualizersIdGet(id);
            //Assert.IsType<EaseeCoreDTOsEqualizerEqualizerDTO>(response);
        }

        /// <summary>
        /// Test ApiEqualizersIdSiteGet
        /// </summary>
        [Fact]
        public void ApiEqualizersIdSiteGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.ApiEqualizersIdSiteGet(id);
            //Assert.IsType<EaseeCoreDTOsSiteSiteDTO>(response);
        }

        /// <summary>
        /// Test ApiEqualizersIdStateGet
        /// </summary>
        [Fact]
        public void ApiEqualizersIdStateGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.ApiEqualizersIdStateGet(id);
            //Assert.IsType<EaseeCoreDTOsEqualizerEqualizerStateDTO>(response);
        }
    }
}
